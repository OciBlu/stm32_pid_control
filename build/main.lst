ARM GAS  /tmp/ccOiytoW.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "string.h"
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/ccOiytoW.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** UART_HandleTypeDef huart1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_DMA_Init(void);
  58:Core/Src/main.c **** static void MX_ADC1_Init(void);
  59:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** uint16_t adc[1];
  67:Core/Src/main.c **** uint16_t adc_read;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** char msg[25];
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** int ADCFinis = 0;
  72:Core/Src/main.c **** int count = 0;
  73:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
  74:Core/Src/main.c **** {
  75:Core/Src/main.c ****   ADCFinis = 1;
  76:Core/Src/main.c **** }
  77:Core/Src/main.c **** /* USER CODE END 0 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /**
  80:Core/Src/main.c ****   * @brief  The application entry point.
  81:Core/Src/main.c ****   * @retval int
  82:Core/Src/main.c ****   */
  83:Core/Src/main.c **** int main(void)
  84:Core/Src/main.c **** {
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END 1 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
ARM GAS  /tmp/ccOiytoW.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  93:Core/Src/main.c ****   HAL_Init();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END Init */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Configure the system clock */
 100:Core/Src/main.c ****   SystemClock_Config();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END SysInit */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Initialize all configured peripherals */
 107:Core/Src/main.c ****   MX_GPIO_Init();
 108:Core/Src/main.c ****   MX_DMA_Init();
 109:Core/Src/main.c ****   MX_ADC1_Init();
 110:Core/Src/main.c ****   MX_USART1_UART_Init();
 111:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****    HAL_ADC_Start_DMA(&hadc1, adc, 1);
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Infinite loop */
 118:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 119:Core/Src/main.c ****   while (1)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     /* USER CODE END WHILE */
 122:Core/Src/main.c ****     count++;
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     adc_read = adc[0];
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     sprintf(msg, "ADC1: %hu  " , adc_read);
 127:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   /* USER CODE END 3 */
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****   * @brief System Clock Configuration
 136:Core/Src/main.c ****   * @retval None
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c **** void SystemClock_Config(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 145:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
ARM GAS  /tmp/ccOiytoW.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 173:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 174:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /**
 181:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 182:Core/Src/main.c ****   * @param None
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** static void MX_ADC1_Init(void)
 186:Core/Src/main.c **** {
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /** Common config
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c ****   hadc1.Instance = ADC1;
 201:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 202:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 203:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 204:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  /tmp/ccOiytoW.s 			page 5


 205:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 206:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 207:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /** Configure Regular Channel
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 215:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 216:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 217:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 218:Core/Src/main.c ****   {
 219:Core/Src/main.c ****     Error_Handler();
 220:Core/Src/main.c ****   }
 221:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /**
 228:Core/Src/main.c ****   * @brief USART1 Initialization Function
 229:Core/Src/main.c ****   * @param None
 230:Core/Src/main.c ****   * @retval None
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 233:Core/Src/main.c **** {
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 242:Core/Src/main.c ****   huart1.Instance = USART1;
 243:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 244:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 245:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 246:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 247:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 248:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 249:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 250:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** }
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /**
 261:Core/Src/main.c ****   * Enable DMA controller clock
ARM GAS  /tmp/ccOiytoW.s 			page 6


 262:Core/Src/main.c ****   */
 263:Core/Src/main.c **** static void MX_DMA_Init(void)
 264:Core/Src/main.c **** {
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* DMA controller clock enable */
 267:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* DMA interrupt init */
 270:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 271:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 272:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /**
 277:Core/Src/main.c ****   * @brief GPIO Initialization Function
 278:Core/Src/main.c ****   * @param None
 279:Core/Src/main.c ****   * @retval None
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c **** static void MX_GPIO_Init(void)
 282:Core/Src/main.c **** {
  26              		.loc 1 282 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 283:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 283 3 view .LVU1
  40              		.loc 1 283 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 284:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 285:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 288:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  46              		.loc 1 288 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 288 3 view .LVU4
  49              		.loc 1 288 3 view .LVU5
  50 000e 184B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F02002 		orr	r2, r2, #32
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 288 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccOiytoW.s 			page 7


  56 001a 02F02002 		and	r2, r2, #32
  57 001e 0192     		str	r2, [sp, #4]
  58              		.loc 1 288 3 view .LVU7
  59 0020 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 288 3 view .LVU8
 289:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 289 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 289 3 view .LVU10
  65              		.loc 1 289 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F00402 		orr	r2, r2, #4
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 289 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F00402 		and	r2, r2, #4
  72 0030 0292     		str	r2, [sp, #8]
  73              		.loc 1 289 3 view .LVU13
  74 0032 029A     		ldr	r2, [sp, #8]
  75              	.LBE5:
  76              		.loc 1 289 3 view .LVU14
 290:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  77              		.loc 1 290 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 290 3 view .LVU16
  80              		.loc 1 290 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00802 		orr	r2, r2, #8
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 290 3 view .LVU18
  85 003c 9B69     		ldr	r3, [r3, #24]
  86 003e 03F00803 		and	r3, r3, #8
  87 0042 0393     		str	r3, [sp, #12]
  88              		.loc 1 290 3 view .LVU19
  89 0044 039B     		ldr	r3, [sp, #12]
  90              	.LBE6:
  91              		.loc 1 290 3 view .LVU20
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 293:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
  92              		.loc 1 293 3 view .LVU21
  93 0046 0B4D     		ldr	r5, .L3+4
  94 0048 2246     		mov	r2, r4
  95 004a 4FF48051 		mov	r1, #4096
  96 004e 2846     		mov	r0, r5
  97 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /*Configure GPIO pin : PB12 */
 296:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12;
  99              		.loc 1 296 3 view .LVU22
 100              		.loc 1 296 23 is_stmt 0 view .LVU23
 101 0054 4FF48053 		mov	r3, #4096
 102 0058 0493     		str	r3, [sp, #16]
 297:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 103              		.loc 1 297 3 is_stmt 1 view .LVU24
ARM GAS  /tmp/ccOiytoW.s 			page 8


 104              		.loc 1 297 24 is_stmt 0 view .LVU25
 105 005a 0123     		movs	r3, #1
 106 005c 0593     		str	r3, [sp, #20]
 298:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 107              		.loc 1 298 3 is_stmt 1 view .LVU26
 108              		.loc 1 298 24 is_stmt 0 view .LVU27
 109 005e 0694     		str	r4, [sp, #24]
 299:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 110              		.loc 1 299 3 is_stmt 1 view .LVU28
 111              		.loc 1 299 25 is_stmt 0 view .LVU29
 112 0060 0223     		movs	r3, #2
 113 0062 0793     		str	r3, [sp, #28]
 300:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 114              		.loc 1 300 3 is_stmt 1 view .LVU30
 115 0064 04A9     		add	r1, sp, #16
 116 0066 2846     		mov	r0, r5
 117 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL1:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 303:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 304:Core/Src/main.c **** }
 119              		.loc 1 304 1 is_stmt 0 view .LVU31
 120 006c 09B0     		add	sp, sp, #36
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 12
 123              		@ sp needed
 124 006e 30BD     		pop	{r4, r5, pc}
 125              	.L4:
 126              		.align	2
 127              	.L3:
 128 0070 00100240 		.word	1073876992
 129 0074 000C0140 		.word	1073810432
 130              		.cfi_endproc
 131              	.LFE72:
 133              		.section	.text.MX_DMA_Init,"ax",%progbits
 134              		.align	1
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu softvfp
 140              	MX_DMA_Init:
 141              	.LFB71:
 264:Core/Src/main.c **** 
 142              		.loc 1 264 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 00B5     		push	{lr}
 147              	.LCFI3:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 14, -4
 150 0002 83B0     		sub	sp, sp, #12
 151              	.LCFI4:
 152              		.cfi_def_cfa_offset 16
 267:Core/Src/main.c **** 
 153              		.loc 1 267 3 view .LVU33
ARM GAS  /tmp/ccOiytoW.s 			page 9


 154              	.LBB7:
 267:Core/Src/main.c **** 
 155              		.loc 1 267 3 view .LVU34
 267:Core/Src/main.c **** 
 156              		.loc 1 267 3 view .LVU35
 157 0004 0A4B     		ldr	r3, .L7
 158 0006 5A69     		ldr	r2, [r3, #20]
 159 0008 42F00102 		orr	r2, r2, #1
 160 000c 5A61     		str	r2, [r3, #20]
 267:Core/Src/main.c **** 
 161              		.loc 1 267 3 view .LVU36
 162 000e 5B69     		ldr	r3, [r3, #20]
 163 0010 03F00103 		and	r3, r3, #1
 164 0014 0193     		str	r3, [sp, #4]
 267:Core/Src/main.c **** 
 165              		.loc 1 267 3 view .LVU37
 166 0016 019B     		ldr	r3, [sp, #4]
 167              	.LBE7:
 267:Core/Src/main.c **** 
 168              		.loc 1 267 3 view .LVU38
 271:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 169              		.loc 1 271 3 view .LVU39
 170 0018 0022     		movs	r2, #0
 171 001a 1146     		mov	r1, r2
 172 001c 0B20     		movs	r0, #11
 173 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 174              	.LVL2:
 272:Core/Src/main.c **** 
 175              		.loc 1 272 3 view .LVU40
 176 0022 0B20     		movs	r0, #11
 177 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 178              	.LVL3:
 274:Core/Src/main.c **** 
 179              		.loc 1 274 1 is_stmt 0 view .LVU41
 180 0028 03B0     		add	sp, sp, #12
 181              	.LCFI5:
 182              		.cfi_def_cfa_offset 4
 183              		@ sp needed
 184 002a 5DF804FB 		ldr	pc, [sp], #4
 185              	.L8:
 186 002e 00BF     		.align	2
 187              	.L7:
 188 0030 00100240 		.word	1073876992
 189              		.cfi_endproc
 190              	.LFE71:
 192              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 193              		.align	1
 194              		.global	HAL_ADC_ConvCpltCallback
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu softvfp
 200              	HAL_ADC_ConvCpltCallback:
 201              	.LVL4:
 202              	.LFB66:
  74:Core/Src/main.c ****   ADCFinis = 1;
 203              		.loc 1 74 1 is_stmt 1 view -0
ARM GAS  /tmp/ccOiytoW.s 			page 10


 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
  75:Core/Src/main.c **** }
 208              		.loc 1 75 3 view .LVU43
  75:Core/Src/main.c **** }
 209              		.loc 1 75 12 is_stmt 0 view .LVU44
 210 0000 014B     		ldr	r3, .L10
 211 0002 0122     		movs	r2, #1
 212 0004 1A60     		str	r2, [r3]
  76:Core/Src/main.c **** /* USER CODE END 0 */
 213              		.loc 1 76 1 view .LVU45
 214 0006 7047     		bx	lr
 215              	.L11:
 216              		.align	2
 217              	.L10:
 218 0008 00000000 		.word	.LANCHOR0
 219              		.cfi_endproc
 220              	.LFE66:
 222              		.section	.text.Error_Handler,"ax",%progbits
 223              		.align	1
 224              		.global	Error_Handler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu softvfp
 230              	Error_Handler:
 231              	.LFB73:
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** /* USER CODE END 4 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /**
 311:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 312:Core/Src/main.c ****   * @retval None
 313:Core/Src/main.c ****   */
 314:Core/Src/main.c **** void Error_Handler(void)
 315:Core/Src/main.c **** {
 232              		.loc 1 315 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ Volatile: function does not return.
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 316:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 317:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 318:Core/Src/main.c ****   __disable_irq();
 238              		.loc 1 318 3 view .LVU47
 239              	.LBB8:
 240              	.LBI8:
 241              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @version  V4.30
ARM GAS  /tmp/ccOiytoW.s 			page 11


   5:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccOiytoW.s 			page 12


  62:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 242              		.loc 2 69 57 view .LVU48
 243              	.LBB9:
  70:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 244              		.loc 2 71 3 view .LVU49
 245              		.syntax unified
 246              	@ 71 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h" 1
 247 0000 72B6     		cpsid i
 248              	@ 0 "" 2
 249              		.thumb
 250              		.syntax unified
 251              	.L13:
 252              	.LBE9:
 253              	.LBE8:
 319:Core/Src/main.c ****   while (1)
 254              		.loc 1 319 3 discriminator 1 view .LVU50
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****   }
 255              		.loc 1 321 3 discriminator 1 view .LVU51
 319:Core/Src/main.c ****   while (1)
 256              		.loc 1 319 9 discriminator 1 view .LVU52
 257 0002 FEE7     		b	.L13
 258              		.cfi_endproc
 259              	.LFE73:
 261              		.section	.text.MX_ADC1_Init,"ax",%progbits
 262              		.align	1
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu softvfp
 268              	MX_ADC1_Init:
 269              	.LFB69:
 186:Core/Src/main.c **** 
 270              		.loc 1 186 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 16
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 00B5     		push	{lr}
 275              	.LCFI6:
 276              		.cfi_def_cfa_offset 4
 277              		.cfi_offset 14, -4
 278 0002 85B0     		sub	sp, sp, #20
 279              	.LCFI7:
 280              		.cfi_def_cfa_offset 24
 192:Core/Src/main.c **** 
 281              		.loc 1 192 3 view .LVU54
 192:Core/Src/main.c **** 
 282              		.loc 1 192 26 is_stmt 0 view .LVU55
 283 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccOiytoW.s 			page 13


 284 0006 0193     		str	r3, [sp, #4]
 285 0008 0293     		str	r3, [sp, #8]
 286 000a 0393     		str	r3, [sp, #12]
 200:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 287              		.loc 1 200 3 is_stmt 1 view .LVU56
 200:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 288              		.loc 1 200 18 is_stmt 0 view .LVU57
 289 000c 0F48     		ldr	r0, .L20
 290 000e 104A     		ldr	r2, .L20+4
 291 0010 0260     		str	r2, [r0]
 201:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 292              		.loc 1 201 3 is_stmt 1 view .LVU58
 201:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 293              		.loc 1 201 27 is_stmt 0 view .LVU59
 294 0012 8360     		str	r3, [r0, #8]
 202:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 295              		.loc 1 202 3 is_stmt 1 view .LVU60
 202:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 296              		.loc 1 202 33 is_stmt 0 view .LVU61
 297 0014 0122     		movs	r2, #1
 298 0016 0273     		strb	r2, [r0, #12]
 203:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 299              		.loc 1 203 3 is_stmt 1 view .LVU62
 203:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 300              		.loc 1 203 36 is_stmt 0 view .LVU63
 301 0018 0375     		strb	r3, [r0, #20]
 204:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 302              		.loc 1 204 3 is_stmt 1 view .LVU64
 204:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 303              		.loc 1 204 31 is_stmt 0 view .LVU65
 304 001a 4FF46021 		mov	r1, #917504
 305 001e C161     		str	r1, [r0, #28]
 205:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 306              		.loc 1 205 3 is_stmt 1 view .LVU66
 205:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 307              		.loc 1 205 24 is_stmt 0 view .LVU67
 308 0020 4360     		str	r3, [r0, #4]
 206:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 309              		.loc 1 206 3 is_stmt 1 view .LVU68
 206:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 310              		.loc 1 206 30 is_stmt 0 view .LVU69
 311 0022 0261     		str	r2, [r0, #16]
 207:Core/Src/main.c ****   {
 312              		.loc 1 207 3 is_stmt 1 view .LVU70
 207:Core/Src/main.c ****   {
 313              		.loc 1 207 7 is_stmt 0 view .LVU71
 314 0024 FFF7FEFF 		bl	HAL_ADC_Init
 315              	.LVL5:
 207:Core/Src/main.c ****   {
 316              		.loc 1 207 6 view .LVU72
 317 0028 60B9     		cbnz	r0, .L18
 214:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 318              		.loc 1 214 3 is_stmt 1 view .LVU73
 214:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 319              		.loc 1 214 19 is_stmt 0 view .LVU74
 320 002a 0023     		movs	r3, #0
 321 002c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccOiytoW.s 			page 14


 215:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 322              		.loc 1 215 3 is_stmt 1 view .LVU75
 215:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 323              		.loc 1 215 16 is_stmt 0 view .LVU76
 324 002e 0122     		movs	r2, #1
 325 0030 0292     		str	r2, [sp, #8]
 216:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 326              		.loc 1 216 3 is_stmt 1 view .LVU77
 216:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 327              		.loc 1 216 24 is_stmt 0 view .LVU78
 328 0032 0393     		str	r3, [sp, #12]
 217:Core/Src/main.c ****   {
 329              		.loc 1 217 3 is_stmt 1 view .LVU79
 217:Core/Src/main.c ****   {
 330              		.loc 1 217 7 is_stmt 0 view .LVU80
 331 0034 01A9     		add	r1, sp, #4
 332 0036 0548     		ldr	r0, .L20
 333 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 334              	.LVL6:
 217:Core/Src/main.c ****   {
 335              		.loc 1 217 6 view .LVU81
 336 003c 20B9     		cbnz	r0, .L19
 225:Core/Src/main.c **** 
 337              		.loc 1 225 1 view .LVU82
 338 003e 05B0     		add	sp, sp, #20
 339              	.LCFI8:
 340              		.cfi_remember_state
 341              		.cfi_def_cfa_offset 4
 342              		@ sp needed
 343 0040 5DF804FB 		ldr	pc, [sp], #4
 344              	.L18:
 345              	.LCFI9:
 346              		.cfi_restore_state
 209:Core/Src/main.c ****   }
 347              		.loc 1 209 5 is_stmt 1 view .LVU83
 348 0044 FFF7FEFF 		bl	Error_Handler
 349              	.LVL7:
 350              	.L19:
 219:Core/Src/main.c ****   }
 351              		.loc 1 219 5 view .LVU84
 352 0048 FFF7FEFF 		bl	Error_Handler
 353              	.LVL8:
 354              	.L21:
 355              		.align	2
 356              	.L20:
 357 004c 00000000 		.word	.LANCHOR1
 358 0050 00240140 		.word	1073816576
 359              		.cfi_endproc
 360              	.LFE69:
 362              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 363              		.align	1
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu softvfp
 369              	MX_USART1_UART_Init:
 370              	.LFB70:
ARM GAS  /tmp/ccOiytoW.s 			page 15


 233:Core/Src/main.c **** 
 371              		.loc 1 233 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0000 08B5     		push	{r3, lr}
 376              	.LCFI10:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 242:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 380              		.loc 1 242 3 view .LVU86
 242:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 381              		.loc 1 242 19 is_stmt 0 view .LVU87
 382 0002 0A48     		ldr	r0, .L26
 383 0004 0A4B     		ldr	r3, .L26+4
 384 0006 0360     		str	r3, [r0]
 243:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 385              		.loc 1 243 3 is_stmt 1 view .LVU88
 243:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 386              		.loc 1 243 24 is_stmt 0 view .LVU89
 387 0008 4FF4E133 		mov	r3, #115200
 388 000c 4360     		str	r3, [r0, #4]
 244:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 389              		.loc 1 244 3 is_stmt 1 view .LVU90
 244:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 390              		.loc 1 244 26 is_stmt 0 view .LVU91
 391 000e 0023     		movs	r3, #0
 392 0010 8360     		str	r3, [r0, #8]
 245:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 393              		.loc 1 245 3 is_stmt 1 view .LVU92
 245:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 394              		.loc 1 245 24 is_stmt 0 view .LVU93
 395 0012 C360     		str	r3, [r0, #12]
 246:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 396              		.loc 1 246 3 is_stmt 1 view .LVU94
 246:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 397              		.loc 1 246 22 is_stmt 0 view .LVU95
 398 0014 0361     		str	r3, [r0, #16]
 247:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 399              		.loc 1 247 3 is_stmt 1 view .LVU96
 247:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 400              		.loc 1 247 20 is_stmt 0 view .LVU97
 401 0016 0C22     		movs	r2, #12
 402 0018 4261     		str	r2, [r0, #20]
 248:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 403              		.loc 1 248 3 is_stmt 1 view .LVU98
 248:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 404              		.loc 1 248 25 is_stmt 0 view .LVU99
 405 001a 8361     		str	r3, [r0, #24]
 249:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 406              		.loc 1 249 3 is_stmt 1 view .LVU100
 249:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 407              		.loc 1 249 28 is_stmt 0 view .LVU101
 408 001c C361     		str	r3, [r0, #28]
 250:Core/Src/main.c ****   {
 409              		.loc 1 250 3 is_stmt 1 view .LVU102
ARM GAS  /tmp/ccOiytoW.s 			page 16


 250:Core/Src/main.c ****   {
 410              		.loc 1 250 7 is_stmt 0 view .LVU103
 411 001e FFF7FEFF 		bl	HAL_UART_Init
 412              	.LVL9:
 250:Core/Src/main.c ****   {
 413              		.loc 1 250 6 view .LVU104
 414 0022 00B9     		cbnz	r0, .L25
 258:Core/Src/main.c **** 
 415              		.loc 1 258 1 view .LVU105
 416 0024 08BD     		pop	{r3, pc}
 417              	.L25:
 252:Core/Src/main.c ****   }
 418              		.loc 1 252 5 is_stmt 1 view .LVU106
 419 0026 FFF7FEFF 		bl	Error_Handler
 420              	.LVL10:
 421              	.L27:
 422 002a 00BF     		.align	2
 423              	.L26:
 424 002c 00000000 		.word	.LANCHOR2
 425 0030 00380140 		.word	1073821696
 426              		.cfi_endproc
 427              	.LFE70:
 429              		.section	.text.SystemClock_Config,"ax",%progbits
 430              		.align	1
 431              		.global	SystemClock_Config
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 435              		.fpu softvfp
 437              	SystemClock_Config:
 438              	.LFB68:
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 439              		.loc 1 139 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 80
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443 0000 00B5     		push	{lr}
 444              	.LCFI11:
 445              		.cfi_def_cfa_offset 4
 446              		.cfi_offset 14, -4
 447 0002 95B0     		sub	sp, sp, #84
 448              	.LCFI12:
 449              		.cfi_def_cfa_offset 88
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 450              		.loc 1 140 3 view .LVU108
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 451              		.loc 1 140 22 is_stmt 0 view .LVU109
 452 0004 2822     		movs	r2, #40
 453 0006 0021     		movs	r1, #0
 454 0008 0DEB0200 		add	r0, sp, r2
 455 000c FFF7FEFF 		bl	memset
 456              	.LVL11:
 141:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 457              		.loc 1 141 3 is_stmt 1 view .LVU110
 141:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 458              		.loc 1 141 22 is_stmt 0 view .LVU111
 459 0010 0023     		movs	r3, #0
ARM GAS  /tmp/ccOiytoW.s 			page 17


 460 0012 0593     		str	r3, [sp, #20]
 461 0014 0693     		str	r3, [sp, #24]
 462 0016 0793     		str	r3, [sp, #28]
 463 0018 0893     		str	r3, [sp, #32]
 464 001a 0993     		str	r3, [sp, #36]
 142:Core/Src/main.c **** 
 465              		.loc 1 142 3 is_stmt 1 view .LVU112
 142:Core/Src/main.c **** 
 466              		.loc 1 142 28 is_stmt 0 view .LVU113
 467 001c 0193     		str	r3, [sp, #4]
 468 001e 0293     		str	r3, [sp, #8]
 469 0020 0393     		str	r3, [sp, #12]
 470 0022 0493     		str	r3, [sp, #16]
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 471              		.loc 1 147 3 is_stmt 1 view .LVU114
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 472              		.loc 1 147 36 is_stmt 0 view .LVU115
 473 0024 0122     		movs	r2, #1
 474 0026 0A92     		str	r2, [sp, #40]
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 475              		.loc 1 148 3 is_stmt 1 view .LVU116
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 476              		.loc 1 148 30 is_stmt 0 view .LVU117
 477 0028 4FF48033 		mov	r3, #65536
 478 002c 0B93     		str	r3, [sp, #44]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 479              		.loc 1 149 3 is_stmt 1 view .LVU118
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 480              		.loc 1 150 3 view .LVU119
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 481              		.loc 1 150 30 is_stmt 0 view .LVU120
 482 002e 0E92     		str	r2, [sp, #56]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 483              		.loc 1 151 3 is_stmt 1 view .LVU121
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 484              		.loc 1 151 34 is_stmt 0 view .LVU122
 485 0030 0222     		movs	r2, #2
 486 0032 1192     		str	r2, [sp, #68]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 487              		.loc 1 152 3 is_stmt 1 view .LVU123
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 488              		.loc 1 152 35 is_stmt 0 view .LVU124
 489 0034 1293     		str	r3, [sp, #72]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 490              		.loc 1 153 3 is_stmt 1 view .LVU125
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 491              		.loc 1 153 32 is_stmt 0 view .LVU126
 492 0036 4FF4E013 		mov	r3, #1835008
 493 003a 1393     		str	r3, [sp, #76]
 154:Core/Src/main.c ****   {
 494              		.loc 1 154 3 is_stmt 1 view .LVU127
 154:Core/Src/main.c ****   {
 495              		.loc 1 154 7 is_stmt 0 view .LVU128
 496 003c 0AA8     		add	r0, sp, #40
 497 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 498              	.LVL12:
 154:Core/Src/main.c ****   {
ARM GAS  /tmp/ccOiytoW.s 			page 18


 499              		.loc 1 154 6 view .LVU129
 500 0042 C8B9     		cbnz	r0, .L33
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 501              		.loc 1 161 3 is_stmt 1 view .LVU130
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 502              		.loc 1 161 31 is_stmt 0 view .LVU131
 503 0044 0F23     		movs	r3, #15
 504 0046 0593     		str	r3, [sp, #20]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 505              		.loc 1 163 3 is_stmt 1 view .LVU132
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 506              		.loc 1 163 34 is_stmt 0 view .LVU133
 507 0048 0221     		movs	r1, #2
 508 004a 0691     		str	r1, [sp, #24]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 509              		.loc 1 164 3 is_stmt 1 view .LVU134
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 510              		.loc 1 164 35 is_stmt 0 view .LVU135
 511 004c 0023     		movs	r3, #0
 512 004e 0793     		str	r3, [sp, #28]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 513              		.loc 1 165 3 is_stmt 1 view .LVU136
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 514              		.loc 1 165 36 is_stmt 0 view .LVU137
 515 0050 4FF48062 		mov	r2, #1024
 516 0054 0892     		str	r2, [sp, #32]
 166:Core/Src/main.c **** 
 517              		.loc 1 166 3 is_stmt 1 view .LVU138
 166:Core/Src/main.c **** 
 518              		.loc 1 166 36 is_stmt 0 view .LVU139
 519 0056 0993     		str	r3, [sp, #36]
 168:Core/Src/main.c ****   {
 520              		.loc 1 168 3 is_stmt 1 view .LVU140
 168:Core/Src/main.c ****   {
 521              		.loc 1 168 7 is_stmt 0 view .LVU141
 522 0058 05A8     		add	r0, sp, #20
 523 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 524              	.LVL13:
 168:Core/Src/main.c ****   {
 525              		.loc 1 168 6 view .LVU142
 526 005e 68B9     		cbnz	r0, .L34
 172:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 527              		.loc 1 172 3 is_stmt 1 view .LVU143
 172:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 528              		.loc 1 172 38 is_stmt 0 view .LVU144
 529 0060 0223     		movs	r3, #2
 530 0062 0193     		str	r3, [sp, #4]
 173:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 531              		.loc 1 173 3 is_stmt 1 view .LVU145
 173:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 532              		.loc 1 173 35 is_stmt 0 view .LVU146
 533 0064 4FF40043 		mov	r3, #32768
 534 0068 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   {
 535              		.loc 1 174 3 is_stmt 1 view .LVU147
 174:Core/Src/main.c ****   {
 536              		.loc 1 174 7 is_stmt 0 view .LVU148
ARM GAS  /tmp/ccOiytoW.s 			page 19


 537 006a 01A8     		add	r0, sp, #4
 538 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 539              	.LVL14:
 174:Core/Src/main.c ****   {
 540              		.loc 1 174 6 view .LVU149
 541 0070 30B9     		cbnz	r0, .L35
 178:Core/Src/main.c **** 
 542              		.loc 1 178 1 view .LVU150
 543 0072 15B0     		add	sp, sp, #84
 544              	.LCFI13:
 545              		.cfi_remember_state
 546              		.cfi_def_cfa_offset 4
 547              		@ sp needed
 548 0074 5DF804FB 		ldr	pc, [sp], #4
 549              	.L33:
 550              	.LCFI14:
 551              		.cfi_restore_state
 156:Core/Src/main.c ****   }
 552              		.loc 1 156 5 is_stmt 1 view .LVU151
 553 0078 FFF7FEFF 		bl	Error_Handler
 554              	.LVL15:
 555              	.L34:
 170:Core/Src/main.c ****   }
 556              		.loc 1 170 5 view .LVU152
 557 007c FFF7FEFF 		bl	Error_Handler
 558              	.LVL16:
 559              	.L35:
 176:Core/Src/main.c ****   }
 560              		.loc 1 176 5 view .LVU153
 561 0080 FFF7FEFF 		bl	Error_Handler
 562              	.LVL17:
 563              		.cfi_endproc
 564              	.LFE68:
 566              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 567              		.align	2
 568              	.LC0:
 569 0000 41444331 		.ascii	"ADC1: %hu  \000"
 569      3A202568 
 569      75202000 
 570              		.section	.text.main,"ax",%progbits
 571              		.align	1
 572              		.global	main
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu softvfp
 578              	main:
 579              	.LFB67:
  84:Core/Src/main.c **** 
 580              		.loc 1 84 1 view -0
 581              		.cfi_startproc
 582              		@ Volatile: function does not return.
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585 0000 08B5     		push	{r3, lr}
 586              	.LCFI15:
 587              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccOiytoW.s 			page 20


 588              		.cfi_offset 3, -8
 589              		.cfi_offset 14, -4
  93:Core/Src/main.c **** 
 590              		.loc 1 93 3 view .LVU155
 591 0002 FFF7FEFF 		bl	HAL_Init
 592              	.LVL18:
 100:Core/Src/main.c **** 
 593              		.loc 1 100 3 view .LVU156
 594 0006 FFF7FEFF 		bl	SystemClock_Config
 595              	.LVL19:
 107:Core/Src/main.c ****   MX_DMA_Init();
 596              		.loc 1 107 3 view .LVU157
 597 000a FFF7FEFF 		bl	MX_GPIO_Init
 598              	.LVL20:
 108:Core/Src/main.c ****   MX_ADC1_Init();
 599              		.loc 1 108 3 view .LVU158
 600 000e FFF7FEFF 		bl	MX_DMA_Init
 601              	.LVL21:
 109:Core/Src/main.c ****   MX_USART1_UART_Init();
 602              		.loc 1 109 3 view .LVU159
 603 0012 FFF7FEFF 		bl	MX_ADC1_Init
 604              	.LVL22:
 110:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 605              		.loc 1 110 3 view .LVU160
 606 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 607              	.LVL23:
 113:Core/Src/main.c **** 
 608              		.loc 1 113 4 view .LVU161
 609 001a 0122     		movs	r2, #1
 610 001c 0D49     		ldr	r1, .L39
 611 001e 0E48     		ldr	r0, .L39+4
 612 0020 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 613              	.LVL24:
 614              	.L37:
 119:Core/Src/main.c ****   {
 615              		.loc 1 119 3 discriminator 1 view .LVU162
 122:Core/Src/main.c **** 
 616              		.loc 1 122 5 discriminator 1 view .LVU163
 122:Core/Src/main.c **** 
 617              		.loc 1 122 10 is_stmt 0 discriminator 1 view .LVU164
 618 0024 0D4A     		ldr	r2, .L39+8
 619 0026 1368     		ldr	r3, [r2]
 620 0028 0133     		adds	r3, r3, #1
 621 002a 1360     		str	r3, [r2]
 124:Core/Src/main.c **** 
 622              		.loc 1 124 5 is_stmt 1 discriminator 1 view .LVU165
 124:Core/Src/main.c **** 
 623              		.loc 1 124 19 is_stmt 0 discriminator 1 view .LVU166
 624 002c 094B     		ldr	r3, .L39
 625 002e 1A88     		ldrh	r2, [r3]
 124:Core/Src/main.c **** 
 626              		.loc 1 124 14 discriminator 1 view .LVU167
 627 0030 0B4B     		ldr	r3, .L39+12
 628 0032 1A80     		strh	r2, [r3]	@ movhi
 126:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 629              		.loc 1 126 5 is_stmt 1 discriminator 1 view .LVU168
 630 0034 0B4C     		ldr	r4, .L39+16
ARM GAS  /tmp/ccOiytoW.s 			page 21


 631 0036 0C49     		ldr	r1, .L39+20
 632 0038 2046     		mov	r0, r4
 633 003a FFF7FEFF 		bl	sprintf
 634              	.LVL25:
 127:Core/Src/main.c **** 
 635              		.loc 1 127 5 discriminator 1 view .LVU169
 127:Core/Src/main.c **** 
 636              		.loc 1 127 47 is_stmt 0 discriminator 1 view .LVU170
 637 003e 2046     		mov	r0, r4
 638 0040 FFF7FEFF 		bl	strlen
 639              	.LVL26:
 127:Core/Src/main.c **** 
 640              		.loc 1 127 5 discriminator 1 view .LVU171
 641 0044 4FF0FF33 		mov	r3, #-1
 642 0048 82B2     		uxth	r2, r0
 643 004a 2146     		mov	r1, r4
 644 004c 0748     		ldr	r0, .L39+24
 645 004e FFF7FEFF 		bl	HAL_UART_Transmit
 646              	.LVL27:
 119:Core/Src/main.c ****   {
 647              		.loc 1 119 9 is_stmt 1 discriminator 1 view .LVU172
 648 0052 E7E7     		b	.L37
 649              	.L40:
 650              		.align	2
 651              	.L39:
 652 0054 00000000 		.word	.LANCHOR3
 653 0058 00000000 		.word	.LANCHOR1
 654 005c 00000000 		.word	.LANCHOR4
 655 0060 00000000 		.word	.LANCHOR5
 656 0064 00000000 		.word	.LANCHOR6
 657 0068 00000000 		.word	.LC0
 658 006c 00000000 		.word	.LANCHOR2
 659              		.cfi_endproc
 660              	.LFE67:
 662              		.global	count
 663              		.global	ADCFinis
 664              		.global	msg
 665              		.global	adc_read
 666              		.global	adc
 667              		.global	huart1
 668              		.global	hdma_adc1
 669              		.global	hadc1
 670              		.section	.bss.ADCFinis,"aw",%nobits
 671              		.align	2
 672              		.set	.LANCHOR0,. + 0
 675              	ADCFinis:
 676 0000 00000000 		.space	4
 677              		.section	.bss.adc,"aw",%nobits
 678              		.align	2
 679              		.set	.LANCHOR3,. + 0
 682              	adc:
 683 0000 0000     		.space	2
 684              		.section	.bss.adc_read,"aw",%nobits
 685              		.align	1
 686              		.set	.LANCHOR5,. + 0
 689              	adc_read:
 690 0000 0000     		.space	2
ARM GAS  /tmp/ccOiytoW.s 			page 22


 691              		.section	.bss.count,"aw",%nobits
 692              		.align	2
 693              		.set	.LANCHOR4,. + 0
 696              	count:
 697 0000 00000000 		.space	4
 698              		.section	.bss.hadc1,"aw",%nobits
 699              		.align	2
 700              		.set	.LANCHOR1,. + 0
 703              	hadc1:
 704 0000 00000000 		.space	48
 704      00000000 
 704      00000000 
 704      00000000 
 704      00000000 
 705              		.section	.bss.hdma_adc1,"aw",%nobits
 706              		.align	2
 709              	hdma_adc1:
 710 0000 00000000 		.space	68
 710      00000000 
 710      00000000 
 710      00000000 
 710      00000000 
 711              		.section	.bss.huart1,"aw",%nobits
 712              		.align	2
 713              		.set	.LANCHOR2,. + 0
 716              	huart1:
 717 0000 00000000 		.space	72
 717      00000000 
 717      00000000 
 717      00000000 
 717      00000000 
 718              		.section	.bss.msg,"aw",%nobits
 719              		.align	2
 720              		.set	.LANCHOR6,. + 0
 723              	msg:
 724 0000 00000000 		.space	25
 724      00000000 
 724      00000000 
 724      00000000 
 724      00000000 
 725              		.text
 726              	.Letext0:
 727              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 728              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 729              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 730              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 731              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 732              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 733              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 734              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 735              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 736              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 737              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 738              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 739              		.file 15 "/usr/include/newlib/stdio.h"
 740              		.file 16 "/usr/include/newlib/string.h"
 741              		.file 17 "<built-in>"
ARM GAS  /tmp/ccOiytoW.s 			page 23


ARM GAS  /tmp/ccOiytoW.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccOiytoW.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccOiytoW.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccOiytoW.s:128    .text.MX_GPIO_Init:0000000000000070 $d
     /tmp/ccOiytoW.s:134    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccOiytoW.s:140    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccOiytoW.s:188    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccOiytoW.s:193    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccOiytoW.s:200    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccOiytoW.s:218    .text.HAL_ADC_ConvCpltCallback:0000000000000008 $d
     /tmp/ccOiytoW.s:223    .text.Error_Handler:0000000000000000 $t
     /tmp/ccOiytoW.s:230    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccOiytoW.s:262    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccOiytoW.s:268    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccOiytoW.s:357    .text.MX_ADC1_Init:000000000000004c $d
     /tmp/ccOiytoW.s:363    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccOiytoW.s:369    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccOiytoW.s:424    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccOiytoW.s:430    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccOiytoW.s:437    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccOiytoW.s:567    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccOiytoW.s:571    .text.main:0000000000000000 $t
     /tmp/ccOiytoW.s:578    .text.main:0000000000000000 main
     /tmp/ccOiytoW.s:652    .text.main:0000000000000054 $d
     /tmp/ccOiytoW.s:696    .bss.count:0000000000000000 count
     /tmp/ccOiytoW.s:675    .bss.ADCFinis:0000000000000000 ADCFinis
     /tmp/ccOiytoW.s:723    .bss.msg:0000000000000000 msg
     /tmp/ccOiytoW.s:689    .bss.adc_read:0000000000000000 adc_read
     /tmp/ccOiytoW.s:682    .bss.adc:0000000000000000 adc
     /tmp/ccOiytoW.s:716    .bss.huart1:0000000000000000 huart1
     /tmp/ccOiytoW.s:709    .bss.hdma_adc1:0000000000000000 hdma_adc1
     /tmp/ccOiytoW.s:703    .bss.hadc1:0000000000000000 hadc1
     /tmp/ccOiytoW.s:671    .bss.ADCFinis:0000000000000000 $d
     /tmp/ccOiytoW.s:678    .bss.adc:0000000000000000 $d
     /tmp/ccOiytoW.s:685    .bss.adc_read:0000000000000000 $d
     /tmp/ccOiytoW.s:692    .bss.count:0000000000000000 $d
     /tmp/ccOiytoW.s:699    .bss.hadc1:0000000000000000 $d
     /tmp/ccOiytoW.s:706    .bss.hdma_adc1:0000000000000000 $d
     /tmp/ccOiytoW.s:712    .bss.huart1:0000000000000000 $d
     /tmp/ccOiytoW.s:719    .bss.msg:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_ADC_Start_DMA
sprintf
ARM GAS  /tmp/ccOiytoW.s 			page 25


strlen
HAL_UART_Transmit
